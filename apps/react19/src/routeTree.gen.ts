/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PathlessLayoutRouteRouteImport } from './routes/_pathlessLayout/route'
import { Route as PathlessLayoutIndexRouteImport } from './routes/_pathlessLayout/index'
import { Route as PathlessLayoutProfileRouteImport } from './routes/_pathlessLayout/profile'
import { Route as PathlessLayoutAuthSignupRouteImport } from './routes/_pathlessLayout/auth/signup'
import { Route as PathlessLayoutAuthLoginRouteImport } from './routes/_pathlessLayout/auth/login'

const PathlessLayoutRouteRoute = PathlessLayoutRouteRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutIndexRoute = PathlessLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)
const PathlessLayoutProfileRoute = PathlessLayoutProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)
const PathlessLayoutAuthSignupRoute =
  PathlessLayoutAuthSignupRouteImport.update({
    id: '/auth/signup',
    path: '/auth/signup',
    getParentRoute: () => PathlessLayoutRouteRoute,
  } as any)
const PathlessLayoutAuthLoginRoute = PathlessLayoutAuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/profile': typeof PathlessLayoutProfileRoute
  '/': typeof PathlessLayoutIndexRoute
  '/auth/login': typeof PathlessLayoutAuthLoginRoute
  '/auth/signup': typeof PathlessLayoutAuthSignupRoute
}
export interface FileRoutesByTo {
  '/profile': typeof PathlessLayoutProfileRoute
  '/': typeof PathlessLayoutIndexRoute
  '/auth/login': typeof PathlessLayoutAuthLoginRoute
  '/auth/signup': typeof PathlessLayoutAuthSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_pathlessLayout': typeof PathlessLayoutRouteRouteWithChildren
  '/_pathlessLayout/profile': typeof PathlessLayoutProfileRoute
  '/_pathlessLayout/': typeof PathlessLayoutIndexRoute
  '/_pathlessLayout/auth/login': typeof PathlessLayoutAuthLoginRoute
  '/_pathlessLayout/auth/signup': typeof PathlessLayoutAuthSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/profile' | '/' | '/auth/login' | '/auth/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/profile' | '/' | '/auth/login' | '/auth/signup'
  id:
    | '__root__'
    | '/_pathlessLayout'
    | '/_pathlessLayout/profile'
    | '/_pathlessLayout/'
    | '/_pathlessLayout/auth/login'
    | '/_pathlessLayout/auth/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PathlessLayoutRouteRoute: typeof PathlessLayoutRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/': {
      id: '/_pathlessLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PathlessLayoutIndexRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/_pathlessLayout/profile': {
      id: '/_pathlessLayout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof PathlessLayoutProfileRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/_pathlessLayout/auth/signup': {
      id: '/_pathlessLayout/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof PathlessLayoutAuthSignupRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/_pathlessLayout/auth/login': {
      id: '/_pathlessLayout/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof PathlessLayoutAuthLoginRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
  }
}

interface PathlessLayoutRouteRouteChildren {
  PathlessLayoutProfileRoute: typeof PathlessLayoutProfileRoute
  PathlessLayoutIndexRoute: typeof PathlessLayoutIndexRoute
  PathlessLayoutAuthLoginRoute: typeof PathlessLayoutAuthLoginRoute
  PathlessLayoutAuthSignupRoute: typeof PathlessLayoutAuthSignupRoute
}

const PathlessLayoutRouteRouteChildren: PathlessLayoutRouteRouteChildren = {
  PathlessLayoutProfileRoute: PathlessLayoutProfileRoute,
  PathlessLayoutIndexRoute: PathlessLayoutIndexRoute,
  PathlessLayoutAuthLoginRoute: PathlessLayoutAuthLoginRoute,
  PathlessLayoutAuthSignupRoute: PathlessLayoutAuthSignupRoute,
}

const PathlessLayoutRouteRouteWithChildren =
  PathlessLayoutRouteRoute._addFileChildren(PathlessLayoutRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  PathlessLayoutRouteRoute: PathlessLayoutRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
